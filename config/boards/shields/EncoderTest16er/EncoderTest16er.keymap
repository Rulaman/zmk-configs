#define HOST_OS 1

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// helper.h from https://github.com/urob/zmk-nodefree-config/tree/main
#include "helper.h"

// ZMK_UNICODE_PAIR(   de_ae,      N0, N0,  E, N4,    N0, N0,  C, N4)

// #define DEFAULT 0
// #define LOWER   1

// #define MY_MACRO(name, unicode_bindings) \
//     / { \
//         macros { \
//             name: name { \
//                 compatible = "zmk,behavior-macro"; \
//                 label = ZMK_HELPER_STRINGIFY(UC_MACRO_ ## name); \
//                 wait-ms = <0>; \
//                 tap-ms = <0>; \
//                 #binding-cells = <0>; \
//                 bindings = <&macro_press &kp LGUI &kp RALT>, <&macro_tap unicode_bindings>, <&macro_release &kp LGUI &kp RALT>; \
//             }; \
//         }; \
//     };

// MY_MACRO(constrainDistance, &kp F  &kp F  &kp E  &kp N0)

// &sensors { status = "okay"; };
// &x_encoder { status = "okay"; };

/ {
    macros {
        makro_move_left: zed_em_kay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_LEFT>;
        };

        makro_move_right: zed_em_kay2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_RIGHT>;
        };
    };

    behaviors {
        xaxis_encoder: encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>; // const
            //bindings = <&mmv MOVE_LEFT>, <&mmv MOVE_RIGHT>;
            //bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
            bindings = <&makro_move_left>, <&makro_move_right>;
        };
        //  xaxis_encoder_var: encoder_left {
        //     compatible = "zmk,behavior-sensor-rotate_var";
        //     #sensor-binding-cells = <2>; // const
        //     bindings = <&mmv>, <&mmv>;
        // };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
        // MB1   MB3   MB2   Layer 1
        // Z     Y     {     }
        // F     D     S     A
        // F13   F14   D     G
            bindings = <
              &mkp LCLK         &mkp MCLK         &mkp RCLK         &mo 1 /* switch to layer lower_layer while pressed */
              &none             &mmv MOVE_UP      &none             &none
              &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_RIGHT   &none
              &kp Q             &kp W             &kp D             &kp G
            >;

            //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            sensor-bindings = <&xaxis_encoder>;
            //sensor-bindings = <&xaxis_encoder_var MOVE_LEFT MOVE_RIGHT>;
        };

        lower_layer {
            bindings = <
                &bt BT_CLR    &bt BT_NXT    &bt BT_PRV    &none
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                &none         &none         &none         &none
                &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &none
            >;
        };
    };
};

