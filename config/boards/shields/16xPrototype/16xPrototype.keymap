#define HOST_OS 1

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// helper.h from https://github.com/urob/zmk-nodefree-config/tree/main
#include "helper.h"

ZMK_UNICODE_PAIR(   de_ae,      N0, N0,  E, N4,    N0, N0,  C, N4)

#define DEFAULT 0
#define LOWER   1

#define MY_MACRO(name, unicode_bindings) \
    / { \
        macros { \
            name: name { \
                compatible = "zmk,behavior-macro"; \
                label = ZMK_HELPER_STRINGIFY(UC_MACRO_ ## name); \
                wait-ms = <0>; \
                tap-ms = <0>; \
                #binding-cells = <0>; \
                bindings = <&macro_press &kp LGUI &kp RALT>, <&macro_tap unicode_bindings>, <&macro_release &kp LGUI &kp RALT>; \
            }; \
        }; \
    };

MY_MACRO(constrainDistance, &kp F  &kp F  &kp E  &kp N0)


/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
        // Ctrl+C   Ctrl+V   Ctrl+B   Layer 1
        // Ctrl+Z   Ctrl+Y     {       }
        //   (        )        [       ]
        //  F13      F14      constrainDistance     Ã¤
            bindings = <
              &kp LC(C)         &kp LC(V)         &kp LC(B)           &mo 1 /* switch to layer lower_layer while pressed */
              &kp LC(Z)         &kp LC(Y)         &kp RA(NUMBER_7)    &kp RA(NUMBER_0)
              &kp RS(NUMBER_8)  &kp RS(NUMBER_9)  &kp RA(NUMBER_8)    &kp RA(NUMBER_9)
              &kp F13           &kp F14           &constrainDistance  &de_ae
            >;
        };

        lower_layer {
            bindings = <
                &bt BT_CLR    &bt BT_NXT    &bt BT_PRV    &none
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                &none         &none         &none         &none 
                &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &none 
                     >;
        };
    };
};
